
// Dashboard.tsx - Auto-generated by Quantum Architect
import React, { useState, useEffect } from 'react';

interface DashboardProps {
  title: string;
  user: any;
}

export const Dashboard: React.FC<DashboardProps> = ({ title, user }) => {
  const [data, setData] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
  setLoading(true);
  try {
    const response = await fetch('/api/data');
    const json = await response.json();
    setData(json);
  } catch (error) {
    console.error('Error fetching data:', error);
  } finally {
    setLoading(false);
  }
};

  return (
    <div className="container mx-auto p-4">
      <div className="header"><h1>{title}</h1></div>
<div className="content">
  {loading ? (
    <div className="loading">Loading...</div>
  ) : (
    <div className="data-container">
      {data.map((item, index) => (
        <div key={index} className="data-item">{JSON.stringify(item)}</div>
      ))}
    </div>
  )}
</div>
    </div>
  );
};

export default Dashboard;
